{"version":3,"file":"component---src-templates-project-tsx-e0bbf17d1fbd0ce27925.js","mappings":"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","sources":["webpack://vedant-sharmaa.github.io/./node_modules/@react-icons/all-files/bi/BiErrorCircle.js","webpack://vedant-sharmaa.github.io/./node_modules/@react-icons/all-files/bi/BiLink.js","webpack://vedant-sharmaa.github.io/./node_modules/@react-icons/all-files/bs/BsFillInfoCircleFill.js","webpack://vedant-sharmaa.github.io/./src/components/shared/Alert.tsx","webpack://vedant-sharmaa.github.io/./src/components/shared/Cards.tsx","webpack://vedant-sharmaa.github.io/./src/components/shared/PageHeader.tsx","webpack://vedant-sharmaa.github.io/./src/components/elements/ProjectAchievement.tsx","webpack://vedant-sharmaa.github.io/./src/components/elements/ProjectAchievements.tsx","webpack://vedant-sharmaa.github.io/./src/components/elements/Project.tsx","webpack://vedant-sharmaa.github.io/./src/components/screens/ProjectScreen.tsx","webpack://vedant-sharmaa.github.io/./src/templates/Project.tsx"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.BiErrorCircle = function BiErrorCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.953,2C6.465,2,2,6.486,2,12s4.486,10,10,10s10-4.486,10-10S17.493,2,11.953,2z M12,20c-4.411,0-8-3.589-8-8 s3.567-8,7.953-8C16.391,4,20,7.589,20,12S16.411,20,12,20z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M11 7H13V14H11zM11 15H13V17H11z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.BiLink = function BiLink (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8.465,11.293c1.133-1.133,3.109-1.133,4.242,0L13.414,12l1.414-1.414l-0.707-0.707c-0.943-0.944-2.199-1.465-3.535-1.465 S7.994,8.935,7.051,9.879L4.929,12c-1.948,1.949-1.948,5.122,0,7.071c0.975,0.975,2.255,1.462,3.535,1.462 c1.281,0,2.562-0.487,3.536-1.462l0.707-0.707l-1.414-1.414l-0.707,0.707c-1.17,1.167-3.073,1.169-4.243,0 c-1.169-1.17-1.169-3.073,0-4.243L8.465,11.293z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,4.929l-0.707,0.707l1.414,1.414l0.707-0.707c1.169-1.167,3.072-1.169,4.243,0c1.169,1.17,1.169,3.073,0,4.243 l-2.122,2.121c-1.133,1.133-3.109,1.133-4.242,0L10.586,12l-1.414,1.414l0.707,0.707c0.943,0.944,2.199,1.465,3.535,1.465 s2.592-0.521,3.535-1.465L19.071,12c1.948-1.949,1.948-5.122,0-7.071C17.121,2.979,13.948,2.98,12,4.929z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.BsFillInfoCircleFill = function BsFillInfoCircleFill (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 16 16\",\"fill\":\"currentColor\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"fillRule\":\"evenodd\",\"d\":\"M8 16A8 8 0 108 0a8 8 0 000 16zm.93-9.412l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM8 5.5a1 1 0 100-2 1 1 0 000 2z\",\"clipRule\":\"evenodd\"}}]})(props);\n};\n","import React from 'react';\nimport { BsFillInfoCircleFill } from '@react-icons/all-files/bs/BsFillInfoCircleFill';\nimport { BiErrorCircle } from '@react-icons/all-files/bi/BiErrorCircle';\n\nimport Row from './Row';\n\ntype AlertType = 'error' | 'info';\n\ntype AlertProps = {\n  type: AlertType,\n  children: React.ReactNode | null,\n};\n\ntype alertIcons = Record<AlertType, React.ReactNode>;\n\ntype alertClasses = Record<AlertType, string>;\n\nexport const InfoAlert: AlertType = 'info';\nexport const ErrorAlert: AlertType = 'error';\n\nconst alertIcons: alertIcons = {\n  [InfoAlert]: <BsFillInfoCircleFill size={18} />,\n  [ErrorAlert]: <BiErrorCircle size={18} />,\n};\n\nconst alertClasses: alertClasses = {\n  [InfoAlert]: 'text-blue-600 bg-blue-100',\n  [ErrorAlert]: 'text-red-600 bg-red-100',\n};\n\nconst Alert = (props: AlertProps): React.ReactElement | null => {\n  const { children, type } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <div className={`py-3 px-4 rounded-md ${alertClasses[type]}`}>\n      <Row>\n        <div className=\"mr-3\">\n          {alertIcons[type]}\n        </div>\n        <div className=\"text-sm\">\n          {children}\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React from 'react';\n\ntype CardsMode = 'list' | 'grid';\n\nexport const cardModeList: CardsMode = 'list';\nexport const cardModeGrid: CardsMode = 'grid';\n\ntype CardsProps = {\n  children: React.ReactNode,\n  mode?: CardsMode,\n};\n\nconst Cards = (props: CardsProps): React.ReactElement | null => {\n  const { children, mode = cardModeGrid } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = 'grid gap-12 grid-cols-1';\n\n  const classes = mode === cardModeGrid\n    ? `${commonClasses} sm:grid-cols-2 lg:grid-cols-3`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from 'react';\nimport H, { hLevel } from './H';\n\ntype PageHeaderProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst PageHeader = (props: PageHeaderProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  const commonClasses = 'mb-6 uppercase font-extrabold';\n\n  const classes = `${commonClasses} ${className}`;\n\n  return (\n    <H level={hLevel.h1} className={classes}>{children}</H>\n  );\n};\n\nexport default PageHeader;\n","import React from 'react';\nimport { BiLink } from '@react-icons/all-files/bi/BiLink';\nimport { useLocation } from '@gatsbyjs/reach-router';\n\nimport { Achievement } from '../../types/Achievement';\nimport Card from '../shared/Card';\nimport CardMedia from '../shared/CardMedia';\nimport { useFluidCover } from '../../hooks/useFluidCover';\nimport FluidImage from '../shared/FluidImage';\nimport CardContent from '../shared/CardContent';\nimport HyperLink from '../shared/HyperLink';\nimport { Link } from '../../types/Link';\nimport DateRange from '../shared/DateRange';\nimport { siteURL } from '../../constants/siteMeta';\n\ntype ProjectAchievementsProps = {\n  achievement: Achievement | null | undefined,\n};\n\nconst ProjectAchievement = (props: ProjectAchievementsProps): React.ReactElement | null => {\n  const { achievement } = props;\n\n  const location = useLocation();\n\n  const imagePath = achievement?.image?.srcPath;\n  const fluidImageFetched = useFluidCover({ imagePath });\n\n  if (!achievement) {\n    return null;\n  }\n\n  const date = achievement?.date ? (\n    <div className=\"mt-3\">\n      <DateRange\n        startDate={achievement.date}\n        className=\"text-xs text-gray-500\"\n        withDay\n      />\n    </div>\n  ) : null;\n\n  const imageLink: Link = {\n    url: `${location?.origin || siteURL}${fluidImageFetched?.images?.fallback?.src}`,\n  };\n\n  const detailsLink = achievement.link ? (\n    <div className=\"mt-3\">\n      <HyperLink\n        link={achievement.link}\n        className=\"text-sm underline\"\n        startEnhancer={(<BiLink size={16} />)}\n      >\n        {achievement.link?.caption || 'Details'}\n      </HyperLink>\n    </div>\n  ) : null;\n\n  return (\n    <Card key={achievement.title}>\n      <CardMedia link={imageLink}>\n        <FluidImage fluidImage={fluidImageFetched} />\n      </CardMedia>\n      <CardContent>\n        <HyperLink link={imageLink}>\n          {achievement.title}\n        </HyperLink>\n        {date}\n        {detailsLink}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ProjectAchievement;\n","import React from 'react';\n\nimport { Achievement } from '../../types/Achievement';\nimport H, { hLevel } from '../shared/H';\nimport Row from '../shared/Row';\nimport Badge from '../shared/Badge';\nimport Cards from '../shared/Cards';\nimport ProjectAchievement from './ProjectAchievement';\n\ntype ProjectAchievementsProps = {\n  achievements: Achievement[] | null | undefined,\n};\n\nconst ProjectAchievements = (props: ProjectAchievementsProps): React.ReactElement | null => {\n  const { achievements } = props;\n\n  if (!achievements || !achievements.length) {\n    return null;\n  }\n\n  const achievementsItems = achievements.map((achievement: Achievement, idx: number) => {\n    return (\n      <ProjectAchievement\n        achievement={achievement}\n        // eslint-disable-next-line react/no-array-index-key\n        key={idx}\n      />\n    );\n  });\n\n  return (\n    <div className=\"mt-6 mb-6\">\n      <Row className=\"mb-3\">\n        <H level={hLevel.h2} id=\"achievements\">\n          Achievements\n        </H>\n        <Badge className=\"ml-3 self-start\">\n          {achievements.length}\n        </Badge>\n      </Row>\n      <Cards>\n        {achievementsItems}\n      </Cards>\n    </div>\n  );\n};\n\nexport default ProjectAchievements;\n","import React from 'react';\nimport { IoPlay } from '@react-icons/all-files/io5/IoPlay';\nimport { FaGlobe } from '@react-icons/all-files/fa/FaGlobe';\nimport { FaGithub } from '@react-icons/all-files/fa/FaGithub';\nimport { BiInfoCircle } from '@react-icons/all-files/bi/BiInfoCircle';\n\nimport { Project as ProjectType } from '../../types/Project';\nimport DateRange from '../shared/DateRange';\nimport Card from '../shared/Card';\nimport CardMedia from '../shared/CardMedia';\nimport Tags from '../shared/Tags';\nimport FluidImage from '../shared/FluidImage';\nimport ButtonLink from '../shared/ButtonLink';\nimport Archived from '../shared/Archived';\nimport Stars from '../shared/Stars';\nimport Row from '../shared/Row';\nimport { getGitHubProjectStars } from '../../utils/project';\nimport { Link } from '../../types/Link';\nimport HyperLink from '../shared/HyperLink';\nimport ProjectAchievements from './ProjectAchievements';\n\ntype ProjectProps = {\n  project: ProjectType | null,\n};\n\nconst tagsPerProject = 5;\n\nconst Project = (props: ProjectProps): React.ReactElement | null => {\n  const { project } = props;\n\n  if (!project) {\n    return null;\n  }\n\n  const projectTags = project?.tags ? (\n    <div>\n      <Tags tags={project.tags} numToShow={tagsPerProject} />\n    </div>\n  ) : null;\n\n  const projectDates = (\n    <DateRange\n      startDate={project.startDate}\n      endDate={project.endDate}\n      className=\"text-xs text-gray-500\"\n    />\n  );\n\n  const projectStars = getGitHubProjectStars(project);\n  const projectStarsLink: Link = {\n    url: project?.srcURL?.url,\n    caption: 'Stars on GitHub',\n  };\n  const stars = typeof projectStars === 'number' ? (\n    <Stars\n      stars={projectStars}\n      link={projectStarsLink}\n      className=\"text-xs text-gray-500 font-light\"\n    />\n  ) : null;\n\n  /* eslint-disable react/no-array-index-key */\n  const projectSummaryLines = project.summary ? project.summary.map(\n    (summaryLine: string | null, index: number) => (\n      <p key={index}>\n        {summaryLine}\n      </p>\n    ),\n  ) : null;\n\n  const projectSummary = projectSummaryLines ? (\n    <div className=\"mb-3 font-light\">\n      {projectSummaryLines}\n    </div>\n  ) : null;\n\n  const defaultProjectUrl = project.archived ? undefined : project.demoURL\n  || project.srcURL || project.oURL;\n\n  const demoLink = project.demoURL && !project.archived ? (\n    <ButtonLink\n      link={project.demoURL}\n      startEnhancer={<IoPlay />}\n      className=\"mr-4\"\n    >\n      Demo\n    </ButtonLink>\n  ) : null;\n\n  const sourceCodeLink = project.srcURL && !project.archived ? (\n    <ButtonLink\n      link={project.srcURL}\n      startEnhancer={<FaGithub />}\n    >\n      Source Code\n    </ButtonLink>\n  ) : null;\n\n  const oCodeLink = project.oURL && !project.archived ? (\n    <ButtonLink\n      link={project.oURL}\n      startEnhancer={<FaGlobe />}\n    >\n      Website\n    </ButtonLink>\n  ) : null;\n\n  const projectCover = project.cover ? (\n    <FluidImage image={project.cover} />\n  ) : null;\n\n  const projectCoverCard = (\n    <div className=\"mb-6\">\n      <Card>\n        <CardMedia link={defaultProjectUrl} className=\"h-96\">\n          {projectCover}\n        </CardMedia>\n      </Card>\n    </div>\n  );\n\n  const archivedStamp = project?.archived ? (\n    <Row className=\"py-6\">\n      <Archived />\n    </Row>\n  ) : null;\n\n  const actions = demoLink || sourceCodeLink || oCodeLink ? (\n    <Row className=\"py-6\">\n      {demoLink}\n      {sourceCodeLink}\n      {oCodeLink}\n    </Row>\n  ) : null;\n\n  const extraLinksList = project?.links && project?.links.length\n    ? project?.links.map((extraLink: Link, linkIndex) => {\n      return (\n        <li key={linkIndex}>\n          <HyperLink\n            link={extraLink}\n            className=\"text-sm underline\"\n            startEnhancer={(<BiInfoCircle size={14} />)}\n          >\n            {extraLink?.caption || 'Read more'}\n          </HyperLink>\n        </li>\n      );\n    })\n    : null;\n\n  const externalLinks = extraLinksList ? (\n    <ul className=\"mt-3\">\n      {extraLinksList}\n    </ul>\n  ) : null;\n\n  const projectDatesAndStars = (\n    <Row className=\"mb-3 justify-between\">\n      <div>\n        {projectDates}\n      </div>\n      <div>\n        {stars}\n      </div>\n    </Row>\n  );\n\n  const projectAchievements = (\n    <ProjectAchievements\n      achievements={project?.achievements}\n    />\n  );\n\n  return (\n    <>\n      {projectCoverCard}\n      {projectDatesAndStars}\n      {projectSummary}\n      {projectTags}\n      {externalLinks}\n      {actions}\n      {archivedStamp}\n      {projectAchievements}\n    </>\n  );\n};\n\nexport default Project;\n","import React from 'react';\n\nimport { Project as ProjectType } from '../../types/Project';\nimport PageLayout from '../layouts/PageLayout';\nimport PageHeader from '../shared/PageHeader';\nimport SEO from '../shared/SEO';\nimport Alert, { ErrorAlert } from '../shared/Alert';\nimport Project from '../elements/Project';\nimport Row from '../shared/Row';\nimport Badge from '../shared/Badge';\n\ntype ProjectScreenProps = {\n  project: ProjectType | null,\n};\n\nconst ProjectScreen = (props: ProjectScreenProps): React.ReactElement => {\n  const { project } = props;\n\n  if (!project) {\n    return (\n      <Alert type={ErrorAlert}>\n        Project not found\n      </Alert>\n    );\n  }\n\n  return (\n    <PageLayout>\n      <SEO\n        title={project?.name || ''}\n        description={project?.summary && project?.summary.length ? project.summary[0] : ''}\n      />\n      <Row>\n        <PageHeader>{project.name}</PageHeader>\n        <Badge className=\"ml-3 self-start\">project</Badge>\n      </Row>\n      <Project project={project} />\n    </PageLayout>\n  );\n};\n\nexport default ProjectScreen;\n","import * as React from 'react';\nimport { PageProps } from 'gatsby';\nimport ProjectScreen from '../components/screens/ProjectScreen';\nimport { projects } from '../data/projects';\nimport { ProjectID, Project as ProjectType } from '../types/Project';\n\ninterface ProjectProps extends PageProps {\n  pageContext: {\n    projectID: ProjectID,\n  },\n}\n\nconst Project = (props: ProjectProps): React.ReactElement => {\n  const { pageContext } = props;\n  const { projectID = null } = pageContext;\n\n  const project: ProjectType | null = projectID && (projectID in projects)\n    ? projects[projectID]\n    : null;\n\n  return (\n    <ProjectScreen project={project} />\n  );\n};\n\nexport default Project;\n"],"names":["GenIcon","module","exports","props","InfoAlert","ErrorAlert","alertIcons","React","BsFillInfoCircleFill","size","BiErrorCircle","alertClasses","children","type","className","Row","cardModeGrid","mode","commonClasses","classes","H","level","hLevel","h1","_achievement$image","_fluidImageFetched$im","_fluidImageFetched$im2","_achievement$link","achievement","location","useLocation","imagePath","image","srcPath","fluidImageFetched","useFluidCover","date","DateRange","startDate","withDay","imageLink","url","origin","siteURL","images","fallback","src","detailsLink","link","HyperLink","startEnhancer","BiLink","caption","Card","key","title","CardMedia","FluidImage","fluidImage","CardContent","achievements","length","achievementsItems","map","idx","ProjectAchievement","h2","id","Badge","Cards","_project$srcURL","project","projectTags","tags","Tags","numToShow","projectDates","endDate","projectStars","getGitHubProjectStars","projectStarsLink","srcURL","stars","Stars","projectSummaryLines","summary","summaryLine","index","projectSummary","defaultProjectUrl","archived","undefined","demoURL","oURL","demoLink","ButtonLink","IoPlay","sourceCodeLink","FaGithub","oCodeLink","FaGlobe","projectCover","cover","projectCoverCard","archivedStamp","Archived","actions","extraLinksList","links","extraLink","linkIndex","BiInfoCircle","externalLinks","projectDatesAndStars","projectAchievements","ProjectAchievements","PageLayout","SEO","name","description","PageHeader","Project","Alert","pageContext","projectID","projects","ProjectScreen"],"sourceRoot":""}