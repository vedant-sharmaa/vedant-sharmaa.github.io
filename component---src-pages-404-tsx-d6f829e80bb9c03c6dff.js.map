{"version":3,"file":"component---src-pages-404-tsx-d6f829e80bb9c03c6dff.js","mappings":"uLAEO,MAAMA,EAAS,CACpBC,GAAI,KACJC,GAAI,KACJC,GAAI,MAaAC,EAAU,CACd,CAACJ,EAAOC,IAAK,WACb,CAACD,EAAOE,IAAK,WACb,CAACF,EAAOG,IAAK,WAgCf,IA7BWE,IACT,MAAM,SACJC,EAAQ,MACRC,EAAK,UACLC,EAAY,MACTC,GACDJ,EAEJ,IAAKC,EACH,OAAO,KAGT,MAAMI,EAAa,GAAGN,EAAQG,MAAUC,IAExC,OAAID,IAAUP,EAAOC,GACZU,EAAAA,cAAA,KAAAC,OAAAC,OAAA,CAAIL,UAAWE,GAAgBD,GAAOH,GAG3CC,IAAUP,EAAOE,GACZS,EAAAA,cAAA,KAAAC,OAAAC,OAAA,CAAIL,UAAWE,GAAgBD,GAAOH,GAG3CC,IAAUP,EAAOG,GACZQ,EAAAA,cAAA,KAAAC,OAAAC,OAAA,CAAIL,UAAWE,GAAgBD,GAAOH,GAGxC,IAAI,C,+CC9Bb,IAZoBD,IAClB,MAAM,SAAEC,EAAQ,UAAEE,EAAY,IAAOH,EAI/BD,EAAU,iCAAoBI,IAEpC,OACEG,EAAAA,cAACG,EAAAA,EAAC,CAACP,MAAOP,EAAAA,EAAOC,GAAIO,UAAWJ,GAAUE,EAAa,C,+GCE3D,MAZuBS,IAEnBJ,EAAAA,cAACK,EAAAA,EAAU,KACTL,EAAAA,cAACM,EAAAA,GAAG,CACFC,MAAM,iBACNC,YAAY,mBAEdR,EAAAA,cAACS,EAAAA,EAAU,KAAC,mBCJlB,MANiBC,IAEbV,EAAAA,cAACI,EAAc,K","sources":["webpack://vedant-sharmaa.github.io/./src/components/shared/H.tsx","webpack://vedant-sharmaa.github.io/./src/components/shared/PageHeader.tsx","webpack://vedant-sharmaa.github.io/./src/components/screens/NotFoundScreen.tsx","webpack://vedant-sharmaa.github.io/./src/pages/404.tsx"],"sourcesContent":["import React from 'react';\n\nexport const hLevel = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n};\n\ntype HLevelKeys = keyof typeof hLevel;\ntype HLevelValues = typeof hLevel[HLevelKeys];\n\ntype HProps = {\n  children: React.ReactNode,\n  level: HLevelValues,\n  className?: string,\n  id?: string,\n};\n\nconst classes = {\n  [hLevel.h1]: 'text-3xl',\n  [hLevel.h2]: 'text-2xl',\n  [hLevel.h3]: 'text-xl',\n};\n\nconst H = (props: HProps): React.ReactElement | null => {\n  const {\n    children,\n    level,\n    className = '',\n    ...rest\n  } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const classNames = `${classes[level]} ${className}`;\n\n  if (level === hLevel.h1) {\n    return <h1 className={classNames} {...rest}>{children}</h1>;\n  }\n\n  if (level === hLevel.h2) {\n    return <h2 className={classNames} {...rest}>{children}</h2>;\n  }\n\n  if (level === hLevel.h3) {\n    return <h3 className={classNames} {...rest}>{children}</h3>;\n  }\n\n  return null;\n};\n\nexport default H;\n","import React from 'react';\nimport H, { hLevel } from './H';\n\ntype PageHeaderProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst PageHeader = (props: PageHeaderProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  const commonClasses = 'mb-6 uppercase font-extrabold';\n\n  const classes = `${commonClasses} ${className}`;\n\n  return (\n    <H level={hLevel.h1} className={classes}>{children}</H>\n  );\n};\n\nexport default PageHeader;\n","import React from 'react';\n\nimport PageLayout from '../layouts/PageLayout';\nimport PageHeader from '../shared/PageHeader';\nimport SEO from '../shared/SEO';\n\nconst NotFoundScreen = (): React.ReactElement => {\n  return (\n    <PageLayout>\n      <SEO\n        title=\"Page not found\"\n        description=\"Page not found\"\n      />\n      <PageHeader>Page not found</PageHeader>\n    </PageLayout>\n  );\n};\n\nexport default NotFoundScreen;\n","import React from 'react';\nimport NotFoundScreen from '../components/screens/NotFoundScreen';\n\nconst NotFound = (): React.ReactElement => {\n  return (\n    <NotFoundScreen />\n  );\n};\n\nexport default NotFound;\n"],"names":["hLevel","h1","h2","h3","classes","props","children","level","className","rest","classNames","React","Object","assign","H","NotFoundScreen","PageLayout","SEO","title","description","PageHeader","NotFound"],"sourceRoot":""}